# 직행좌석 8201번 버스 정류소 정보 (노선 ID: 234001730)
# 경기버스정보시스템 API 기준
# 기점: 안성종합버스터미널 → 종점: 야탑역.종합버스터미널(광역버스)
# 정류소 순번(stationSeq)에 따른 정류소 이름 리스트
# 인덱스 0은 사용하지 않음 (정류소 순번은 1부터 시작)

# 직행좌석 8201번 버스 정류소 목록 (인덱스 = 정류소 순번)
BUS_STOPS_8201 = [
    "미사용",  # 인덱스 0 - 사용하지 않음
    "안성종합버스터미널",  # 인덱스 1 - 정류소 순번 1
    "버스터미널입구(경유)",  # 인덱스 2 - 정류소 순번 2
    "안성맞춤공감센터",  # 인덱스 3 - 정류소 순번 3
    "한경국립대학교",  # 인덱스 4 - 정류소 순번 4
    "중앙대.롯데캐슬아파트",  # 인덱스 5 - 정류소 순번 5
    "대림동산",  # 인덱스 6 - 정류소 순번 6
    "공도시외버스정류장",  # 인덱스 7 - 정류소 순번 7
    "주은.풍림아파트",  # 인덱스 8 - 정류소 순번 8
    "안성TG(경유)",  # 인덱스 9 - 정류소 순번 9
    "안성JC(경유)",  # 인덱스 10 - 정류소 순번 10
    "남사진위IC(경유)",  # 인덱스 11 - 정류소 순번 11
    "오산IC(경유)",  # 인덱스 12 - 정류소 순번 12
    "동탄JC(경유)",  # 인덱스 13 - 정류소 순번 13
    "기흥동탄IC(경유)",  # 인덱스 14 - 정류소 순번 14
    "기흥휴게소(경유)",  # 인덱스 15 - 정류소 순번 15
    "수원신갈IC(경유)",  # 인덱스 16 - 정류소 순번 16
    "신갈JC(경유)",  # 인덱스 17 - 정류소 순번 17
    "죽전(경유)",  # 인덱스 18 - 정류소 순번 18
    "금곡(경유)",  # 인덱스 19 - 정류소 순번 19
    "서울TG(경유)",  # 인덱스 20 - 정류소 순번 20
    "판교진입(경유)",  # 인덱스 21 - 정류소 순번 21
    "판교역.낙생육교.현대백화점",  # 인덱스 22 - 정류소 순번 22
    "매송사거리(경유)",  # 인덱스 23 - 정류소 순번 23
    "벌말사거리(경유)",  # 인덱스 24 - 정류소 순번 24
    "하탑사거리(경유)",  # 인덱스 25 - 정류소 순번 25
    "야탑역.종합버스터미널(광역버스)",  # 인덱스 26 - 정류소 순번 26 (종점)
    "야탑역.종합버스터미널(전면)",  # 인덱스 27 - 정류소 순번 27
    "하탑사거리(경유)",  # 인덱스 28 - 정류소 순번 28
    "벌말사거리(경유)",  # 인덱스 29 - 정류소 순번 29
    "매송사거리(경유)",  # 인덱스 30 - 정류소 순번 30
    "판교역.낙생육교.현대백화점",  # 인덱스 31 - 정류소 순번 31
    "판교출입(경유)",  # 인덱스 32 - 정류소 순번 32
    "서울TG(경유)",  # 인덱스 33 - 정류소 순번 33
    "금곡(경유)",  # 인덱스 34 - 정류소 순번 34
    "죽전(경유)",  # 인덱스 35 - 정류소 순번 35
    "신갈JC(경유)",  # 인덱스 36 - 정류소 순번 36
    "수원신갈IC(경유)",  # 인덱스 37 - 정류소 순번 37
    "기흥휴게소(경유)",  # 인덱스 38 - 정류소 순번 38
    "기흥동탄IC(경유)",  # 인덱스 39 - 정류소 순번 39
    "동탄JC(경유)",  # 인덱스 40 - 정류소 순번 40
    "오산IC(경유)",  # 인덱스 41 - 정류소 순번 41
    "남사진위IC(경유)",  # 인덱스 42 - 정류소 순번 42
    "안성JC(경유)",  # 인덱스 43 - 정류소 순번 43
    "안성TG(경유)",  # 인덱스 44 - 정류소 순번 44
    "안성주은.풍림아파트",  # 인덱스 45 - 정류소 순번 45
    "공도시외버스정류장",  # 인덱스 46 - 정류소 순번 46
    "대림동산",  # 인덱스 47 - 정류소 순번 47
    "중앙대.롯데캐슬아파트",  # 인덱스 48 - 정류소 순번 48
    "한경국립대학교",  # 인덱스 49 - 정류소 순번 49
    "안성맞춤공감센터.서광아파트",  # 인덱스 50 - 정류소 순번 50
    "안성종합버스터미널"  # 인덱스 51 - 정류소 순번 51 (회차)
]

# 정류소 순번으로 정류소 이름 조회 함수
def get_bus_stop_name(station_seq):
    """
    정류소 순번으로 정류소 이름을 반환
    
    Args:
        station_seq (int or str): 정류소 순번
        
    Returns:
        str: 정류소 이름, 없으면 "알 수 없는 정류소"
    """
    try:
        seq = int(station_seq)
        if 0 <= seq < len(BUS_STOPS_8201):
            return BUS_STOPS_8201[seq]
        else:
            return f"정류소 {seq}"
    except (ValueError, TypeError):
        return "알 수 없는 정류소"

# 정류소 이름으로 순번 조회 함수
def get_station_seq(bus_stop_name):
    """
    정류소 이름으로 순번을 반환
    
    Args:
        bus_stop_name (str): 정류소 이름
        
    Returns:
        int: 정류소 순번, 없으면 None
    """
    try:
        return BUS_STOPS_8201.index(bus_stop_name)
    except ValueError:
        return None

# 전체 정류소 목록 반환 함수 (인덱스 0 제외)
def get_all_bus_stops():
    """
    전체 정류소 목록을 순번 순으로 반환 (인덱스 0 제외)
    
    Returns:
        list: [(순번, 정류소명), ...] 형태의 리스트
    """
    return [(i, name) for i, name in enumerate(BUS_STOPS_8201) if i > 0]

# 정류소 개수 (인덱스 0 제외)
TOTAL_STOPS = len(BUS_STOPS_8201) - 1

# 주요 정류소 (환승역 등)
MAJOR_STOPS = {
    1: "안성종합버스터미널",  # 기점
    22: "판교역.낙생육교.현대백화점",
    26: "야탑역.종합버스터미널(광역버스)",  # 종점
    51: "안성종합버스터미널"  # 회차
}

# 구간별 정류소 그룹
SECTION_GROUPS = {
    "안성구간": list(range(1, 9)),      # 안성종합버스터미널 ~ 주은.풍림아파트
    "고속도로구간": list(range(9, 22)),  # 안성TG ~ 판교진입
    "판교구간": list(range(22, 27)),    # 판교역 ~ 야탑역.종합버스터미널
    "복귀구간": list(range(27, 52))     # 야탑역 ~ 안성종합버스터미널(회차)
}

# 노선 정보
ROUTE_INFO = {
    "route_number": "8201",
    "route_id": "234001730",
    "route_type": "직행좌석",
    "start_stop": "안성종합버스터미널",
    "end_stop": "야탑역.종합버스터미널(광역버스)",
    "total_stops": 51,
    "operation_type": "순환형",
    "description": "안성 ↔ 야탑 광역버스"
}

# 경유 정류소와 일반 정류소 구분
BYPASS_STOPS = [seq for seq, name in enumerate(BUS_STOPS_8201) if "(경유)" in name]
REGULAR_STOPS = [seq for seq, name in enumerate(BUS_STOPS_8201) if "(경유)" not in name and seq > 0]